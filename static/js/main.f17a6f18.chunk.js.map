{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","api/index.js","Components/Chart/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","Components/Chart/Chart.module.css","Components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barchart","options","legend","display","title","text","CountyPicker","handleCountryChange","fetchedCountries","setfetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","index","key","App","props","fetcheddata","setState","state","this","image","src","coronaimage","alt","CountryPicker","React","Component","ReactDom","render","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,4NC0DpJC,EArDH,SAAC,GAAkD,IAAD,IAAhDC,KAAMC,EAA0C,EAA1CA,UAAUC,EAAgC,EAAhCA,UAAUC,EAAsB,EAAtBA,OAAOC,EAAe,EAAfA,WAC3C,OAAIH,EAGA,yBAAKI,UAAWC,IAAOC,WACnB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAChC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOY,WACxE,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CACIC,MAAO,EACPC,IAAKxB,EAAUyB,MACfC,SAAU,IACVC,UAAU,OAElB,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAGR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOJ,YACxE,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MACpB,kBAAC,IAAD,CACQC,MAAO,EACPC,IAAKvB,EAAUwB,MACfC,SAAU,IACVC,UAAU,OAElB,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAGR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOH,SACxE,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MACpB,kBAAC,IAAD,CACQC,MAAO,EACPC,IAAKtB,EAAOuB,MACZC,SAAU,IACVC,UAAU,OAElB,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,2CA5CE,e,yBCLpBQ,EAAK,iCAEEC,EAAS,uCAAC,WAAOC,GAAP,2BAAAC,EAAA,6DACfC,EAAgBJ,EACjBE,IACCE,EAAc,GAAD,OAAIJ,EAAJ,sBAAqBE,IAHnB,kBAO4CG,IAAMC,IAAIF,GAPtD,2BAORnC,KAAME,EAPE,EAOFA,UAAUD,EAPR,EAOQA,UAAUE,EAPlB,EAOkBA,OAAOC,EAPzB,EAOyBA,WAPzB,kBASR,CAAEH,YAAWC,YAAWC,SAASC,eATzB,kCAWfkC,QAAQC,IAAR,MAXe,0DAAD,sDAeTC,EAAc,uCAAG,gCAAAN,EAAA,+EAEHE,IAAMC,IAAN,UAAaN,EAAb,WAFG,uBAEf/B,EAFe,EAEfA,KAEDyC,EAAazC,EAAK0C,KAAI,SAACC,GAAD,MAAc,CACtC1C,UAAU0C,EAAU1C,UAAU2C,MAC9BzC,OAAOwC,EAAUxC,OAAOyC,MACxBC,KAAKF,EAAUG,eAPG,kBASfL,GATe,yFAAH,qDAgBdM,EAAc,uCAAE,8BAAAb,EAAA,+EAEWE,IAAMC,IAAN,UAAaN,EAAb,eAFX,uBAERiB,EAFQ,EAEdhD,KAAMgD,UAFQ,kBAGdA,EAAUN,KAAI,SAACT,GAAD,OAAWA,EAAQgB,SAHnB,gCAKrBX,QAAQC,IAAR,MALqB,yDAAF,qD,yBCgCZW,EA7DH,SAAC,GAA+C,IAAD,IAA7ClD,KAAMC,EAAuC,EAAvCA,UAAUC,EAA6B,EAA7BA,UAAUC,EAAmB,EAAnBA,OAAQ8B,EAAW,EAAXA,QAAW,EACrBkB,mBAAS,IADY,mBAChDR,EADgD,KACrCS,EADqC,KAGvDC,qBAAU,YACQ,uCAAC,sBAAAnB,EAAA,kEACXkB,EADW,SACQZ,IADR,6EAAD,qDAGdc,KAEF,IAGF,IAAMC,EACHZ,EAAUa,OAAQ,kBAAC,IAAD,CACbxD,KAAM,CACFyD,OAAOd,EAAUD,KAAI,qBAAEG,QACvBa,SAAS,CAAC,CACN1D,KAAK2C,EAAUD,KAAI,qBAAEzC,aACrB0D,MAAM,WACNC,YAAY,UACZC,MAAK,GACP,CACE7D,KAAK2C,EAAUD,KAAI,qBAAEvC,UACrBwD,MAAM,SACNC,YAAY,MACZE,gBAAgB,oBAChBD,MAAK,OAGT,KAINE,EACF9D,EACE,kBAAC,IAAD,CACFD,KAAM,CACFyD,OAAO,CAAC,WAAW,YAAY,UAC/BC,SAAS,CAAC,CACND,OAAO,SACPK,gBAAgB,CACZ,oBACA,oBACA,qBAER9D,KAAK,CAACC,EAAUyB,MAAMxB,EAAUwB,MAAMvB,EAAOuB,UAGjDsC,QAAS,CACLC,OAAO,CAACC,SAAQ,GAChBC,MAAM,CAACD,SAAQ,EAAKE,KAAK,oBAAD,OAAqBnC,OAE7C,KAER,OACI,yBAAK5B,UAAWC,IAAOC,WAClB0B,EAAQ8B,EAASR,I,mCCnCfc,EApBI,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,oBAAuB,EACKnB,mBAAS,IADd,mBACjCoB,EADiC,KAChBC,EADgB,KAUxC,OARAnB,qBAAU,YACQ,uCAAC,sBAAAnB,EAAA,kEACXsC,EADW,SACezB,IADf,6EAAD,qDAGdO,KACF,CAACkB,IACHlC,QAAQC,IAAIgC,GAGR,kBAACE,EAAA,EAAD,CAAapE,UAAWC,IAAOoE,aAC3B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAKR,EAAoBQ,EAAEC,OAAOrD,SACtE,4BAAQA,MAAM,IAAd,UACC6C,EAAiB7B,KAAI,SAACM,EAAUgC,GAAX,OAAmB,4BAAQC,IAAKD,EAAOtD,MAAOsB,GAAYA,MAFpF,O,kCC6BGkC,E,kDAxCX,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAgBRb,oBAjBmB,uCAiBC,WAAOrC,GAAP,eAAAC,EAAA,sEACQF,EAAUC,GADlB,OACVmD,EADU,OAEhB9C,QAAQC,IAAI6C,GACZ,EAAKC,SAAS,CAACrF,KAAKoF,EAAanD,QAAQA,IACzCK,QAAQC,IAAIN,GAJI,2CAjBD,sDAGjB,EAAKqD,MAAQ,CACVtF,KAAK,GACLiC,QAAQ,IALM,E,gMAWSD,I,OAAlBoD,E,OAEPG,KAAKF,SAAS,CAACrF,KAAKoF,I,qIAad,IAAD,EACiBG,KAAKD,MAAnBtF,EADH,EACGA,KAAKiC,EADR,EACQA,QAEZ,OACI,yBAAK5B,UAAWC,IAAOC,WACnB,yBAAKF,UAAWC,IAAOkF,MAAOC,IAAKC,IAAaC,IAAI,aACpD,kBAAC,EAAD,CAAQ3F,KAAMA,IACd,kBAAC4F,EAAD,CAAetB,oBAAqBiB,KAAKjB,sBACzC,kBAAC,EAAD,CAAQtE,KAAMA,EAAMiC,QAASA,S,GAnC3B4D,IAAMC,WCHxBC,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,eAAe,U,mBCH/CrG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,sB,mBCA9DD,EAAOC,QAAU,CAAC,YAAc,qC,mBCDhCD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.f17a6f18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__9qO72\",\"card\":\"Cards_card__23DFe\",\"infected\":\"Cards_infected__f8wgP\",\"recovered\":\"Cards_recovered__1RCkb\",\"deaths\":\"Cards_deaths__1T6KN\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames'\r\n\r\nconst Cards=({data:{confirmed,recovered,deaths,lastUpdate}})=>{\r\n    if(!confirmed){return \"LOADING....\"}\r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.5}\r\n                                separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp \r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2.5}\r\n                                separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp \r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={2.5}\r\n                                separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url =\"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData=async (country)=>{\r\n    let changeableUrl = url;\r\n    if(country){\r\n        changeableUrl=`${url}/countries/${country}`\r\n    }\r\n\r\n    try{\r\n        const {data:{recovered,confirmed,deaths,lastUpdate}}=await axios.get(changeableUrl);\r\n        \r\n        return { confirmed, recovered, deaths,  lastUpdate};    \r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async()=>{\r\n    try{\r\n        const {data}=await axios.get(`${url}/daily`)\r\n\r\n        const modifiedData=data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate,  \r\n        }))\r\n        return modifiedData;\r\n    }\r\n    catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries =async ()=>{\r\n    try{\r\n        const {data:{countries}} =await axios.get(`${url}/countries`);\r\n        return countries.map((country)=>country.name)\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}","import React, {useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart=({data:{confirmed,recovered,deaths},country})=>{\r\n    const [dailyData, setDailyData] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        const fetchAPI=async ()=>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n        \r\n    },[]);\r\n\r\n    \r\n    const lineChart=(\r\n       dailyData.length?(<Line \r\n            data={{\r\n                labels:dailyData.map(({date})=>date),\r\n                datasets:[{\r\n                    data:dailyData.map(({confirmed})=>confirmed),\r\n                    label:'Infected',\r\n                    borderColor:'#3333ff',\r\n                    fill:true,\r\n                },{\r\n                    data:dailyData.map(({deaths})=>deaths),\r\n                    label:'Deaths',\r\n                    borderColor:'red',\r\n                    backgroundColor:'rgba(255,0,0,0.5)',\r\n                    fill:true,\r\n                }],\r\n            }}\r\n            />):null\r\n\r\n    );\r\n\r\n    const barchart=(\r\n        confirmed\r\n        ?(<Bar\r\n        data={{\r\n            labels:['Infected','Recovered','Deaths'],\r\n            datasets:[{\r\n                labels:'People',\r\n                backgroundColor:[\r\n                    'rgba(0,0,255,0.5)',\r\n                    'rgba(0,255,0,0.5)',\r\n                    'rgba(255,0,0,0.5)',\r\n            ],\r\n            data:[confirmed.value,recovered.value,deaths.value]\r\n            }]\r\n        }}\r\n        options={{\r\n            legend:{display:false},\r\n            title:{display:true,text:`Cuurent state in ${country}`}\r\n        }}\r\n        />):null\r\n    )\r\n    return(\r\n        <div className={styles.container}>\r\n            {country?barchart:lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\n\r\nconst CountyPicker=({handleCountryChange})=>{\r\n    const [fetchedCountries,setfetchedCountries]=useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI=async ()=>{\r\n            setfetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI()\r\n    },[setfetchedCountries]);\r\n    console.log(fetchedCountries);\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((countries,index)=><option key={index} value={countries}>{countries}</option>)};\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountyPicker;","import React from 'react';\r\n\r\nimport {Cards,Chart,CountryPicker} from './Components'\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\nimport coronaimage from './images/image.png'\r\n\r\nclass App extends React.Component{\r\n    constructor(props) {\r\n      super(props)\r\n    \r\n      this.state = {\r\n         data:{},\r\n         country:'',\r\n      };\r\n    };\r\n    \r\n\r\n    async componentDidMount(){\r\n        const fetcheddata=await fetchData();\r\n        \r\n       this.setState({data:fetcheddata})\r\n       \r\n    }\r\n\r\n    handleCountryChange=async (country)=>{\r\n        const fetcheddata=await fetchData(country);\r\n        console.log(fetcheddata);\r\n        this.setState({data:fetcheddata, country:country});\r\n        console.log(country); \r\n        //fetch the data and then set the state\r\n\r\n    }\r\n\r\n    render(){\r\n        const {data,country}=this.state;\r\n        \r\n        return(\r\n            <div className={styles.container} >\r\n                <img className={styles.image} src={coronaimage} alt=\"COVID-19\"/>\r\n                <Cards  data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart  data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App'\r\n\r\nReactDom.render(<App/>,document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3uL-3\",\"image\":\"App_image__1iewJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__FnLap\",\"card\":\"Chart_card__2b3_n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2Cno1\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}